substitutions:
  device_name: esp138-qualite-air
  adress_ip: "192.168.0.138"
  friendly_name: esp138
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
  platform: ESP32
  board: mhetesp32minikit
  platformio_options:
    lib_deps: NeoPixelBus@2.6.0
  on_boot:
    then:
      - light.control:
          id: rgb_led
          brightness: 0.25
          state: on
wifi:
  networks:
    - ssid: !secret wifi_esp
      password: !secret mdpwifi_esp
      priority: 1
    - ssid: !secret wifi
      password: !secret mdpwifi
      priority: 0

  reboot_timeout: 5min

  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.1
    subnet: 255.255.255.0

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:

ota:

web_server:
  port: 80
  
font:
  - file: "fonts/arial.ttf"
    id: arial
    size: 15

# Led WS2812 RGB  
light:

  - platform: neopixelbus
    num_leds: 8 
    pin: GPIO0
    name: "RGB strip"
    variant: ws2812
    id: rgb_led
    default_transition_length: 0s  

    
i2c:
  sda: GPIO21 #
  scl: GPIO22 #
  scan: True
  id: bus_a
  
uart:
  - id: uart_a
    rx_pin: GPIO25 #
    baud_rate: 9600

  - id: uart_b
    rx_pin: GPIO16
    tx_pin: GPIO17
    baud_rate: 9600
    
globals:
  - id: bp_mode
    type: int
    initial_value: '1'
    
sensor:
  - platform: pmsx003
    uart_id: uart_a
    type: PMSX003
    pm_1_0:
      name: "Concentration de particules <1.0µm"
      id: pm1_0
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
            send_first_at: 1

    pm_2_5:
      name: "Concentration de particules <2.5µm"
      id: pm2_5
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
            send_first_at: 1

      on_value:
  # de 0 à 85 / 8 leds    
  # Led 0
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  below: 25
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 0
                    red: 0%
                    green: 100%
                    blue: 0%
                    color_brightness: 100%
                - light.addressable_set:
                    id: rgb_led
                    range_from: 1
                    range_to: 7
                    red: 0%
                    green: 0%
                    blue: 0%
                    color_brightness: 0%  
  # led 1                  
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 25
                  below: 35
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 1
                    red: 0%
                    green: 100%
                    blue: 0%
                    color_brightness: 100%
                - light.addressable_set:
                    id: rgb_led
                    range_from: 2
                    range_to: 7
                    red: 0%
                    green: 0%
                    blue: 0%
                    color_brightness: 0%  
  # Led 2              
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 35
                  below: 45
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 2
                    red: 0%
                    green: 100%
                    blue: 0%
                    color_brightness: 100%
                - light.addressable_set:
                    id: rgb_led
                    range_from: 3
                    range_to: 7
                    red: 0%
                    green: 0%
                    blue: 0%
                    color_brightness: 0%     
  # led 3                  
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 45
                  below: 55
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 3
                    red: 75%
                    green: 75%
                    blue: 0%
                    color_brightness: 100%
                - light.addressable_set:
                    id: rgb_led
                    range_from: 4
                    range_to: 7
                    red: 0%
                    green: 0%
                    blue: 0%
                    color_brightness: 0%     
  # led 4
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 55
                  below: 65
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 4
                    red: 75%
                    green: 75%
                    blue: 0%
                    color_brightness: 100%
                - light.addressable_set:
                    id: rgb_led
                    range_from: 5
                    range_to: 7
                    red: 0%
                    green: 0%
                    blue: 0%
                    color_brightness: 0%  
  # led 5
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 65
                  below: 75
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 5
                    red: 100%
                    green: 0%
                    blue: 0%
                    color_brightness: 100%
                - light.addressable_set:
                    id: rgb_led
                    range_from: 6
                    range_to: 7
                    red: 0%
                    green: 0%
                    blue: 0%
                    color_brightness: 0%      
  # led 6
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 75
                  below: 85
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 6
                    red: 100%
                    green: 0%
                    blue: 0%
                    color_brightness: 100%
                - light.addressable_set:
                    id: rgb_led
                    range_from: 7
                    range_to: 7
                    red: 0%
                    green: 0%
                    blue: 0%
                    color_brightness: 0%    
  # Led 7
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 85
              then: 
                - light.addressable_set:
                    id: rgb_led
                    range_from: 0
                    range_to: 7
                    red: 100%
                    green: 0%
                    blue: 0%
                    color_brightness: 100%

    pm_10_0:
      name: "Concentration de particules <10.0µm"
      id: pm10_0
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
            send_first_at: 1
            
    pm_0_3um:
      name: "Nb de particules >0.3"
      id: pm_03_um
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_0_5um:
      name: "Nb de particules >0.5"
      id: pm_05_um
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_1_0um:
      name: "Nb de particules >1.0"
      id: pm_10_um
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_2_5um:
      name: "Nb de particules >2.5"
      id: pm_25_um
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_5_0um:
      name: "Nb de particules >5.0"
      id: pm_50_um
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_10_0um:
      name: "Nb de particules >10.0"
      id: pm_100_um
      unit_of_measurement: "ppd"
      accuracy_decimals: 0

      
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal Sensor"
    update_interval: 60s

  - platform: uptime
    name: "${friendly_name} Uptime Sensor"
    update_interval: 60s
    
  - platform: mhz19
    uart_id: uart_b
    id: mh_z19
    co2:
      name: "MH-Z19 CO2 Value"
      id: co2
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 12 # moyenne sur 12 lecture
            send_every: 6 # envoi toutes les 6 lectures
            send_first_at: 1 # envoi à la premiere lecture
            
    temperature:
      name: "MH-Z19 Temperature"
      id: temp
      filters:
        - sliding_window_moving_average:
            window_size: 24
            send_every: 12
            send_first_at: 1
            
    update_interval: 10s
    automatic_baseline_calibration: false    


# Il s'agit d'un modèle de capteur qui effectue une moyenne mobile de 30 minutes de PM2,5
# il supprime les valeurs aberrantes et de rendre le contrôle plus fluide

  - platform: template
    name: "Concentration de particules <2.5µm median"
    id: pm2_5_median
    icon: mdi:chemical-weapon
    unit_of_measurement: µg/m³
    lambda: |-
      return id(pm2_5).state;
    update_interval: 60s
    filters:
      - median:
          window_size: 30
          send_every: 30
          send_first_at: 15

binary_sensor:
  - platform: gpio
    name: bp_mod
    id: button
    pin:
      number: GPIO14
      inverted: true
    on_click:
      - min_length: 25ms
        max_length: 500ms
        then:
          - lambda: |-
              if (id(bp_mode) < 3) { id(bp_mode) += 1; }
              else { id(bp_mode) = 1; }
  - platform: gpio
    name: bp_mod
    id: button2
    pin:
      number: GPIO13
      inverted: true

#Etat de la connection
  - platform: status
    name: "${friendly_name} Status"

interval:
  - interval: 60s
    then:
      - switch.turn_on: val_mes
      - delay: 10s
      - switch.turn_off: val_mes
      - delay: 30s

switch:   
  - platform: gpio
    pin: 
      number: GPIO27 #
    id: val_mes
    name: "${friendly_name} Validation mesure"
    
  - platform: template
    name: "Calibration zero Mh-Z19 CO2"
    turn_on_action:
      - mhz19.calibrate_zero: mh_z19
      - switch.turn_off: co2_cal
    id: co2_cal

  - platform: restart
    name: "${friendly_name} Restart"

# gestion afficheur

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    brightness: 100%
    lambda: |-
      if (id(bp_mode) == 1 )
        {
        it.printf(0,0,id(arial),"PM1.0=%.2f",id(pm1_0).state);
        it.printf(0,15,id(arial),"PM2.5=%.2f",id(pm2_5).state);
        it.printf(0,30,id(arial),"PM10.0=%.2f",id(pm10_0).state);
        it.printf(0,45,id(arial),"CO2=%.0f",id(co2).state);
        }
      else if (id(bp_mode) == 2 )
        {
        it.printf(0,0,id(arial),"0.3UM=%.1f",id(pm_03_um).state);
        it.printf(0,15,id(arial),"0.5UM=%.1f",id(pm_05_um).state);
        it.printf(0,30,id(arial),"1.0UM=%.1f",id(pm_10_um).state);
        it.printf(0,45,id(arial),"2.5UM=%.1f",id(pm_25_um).state);        
        }
      else if (id(bp_mode) == 3 )
        {
        it.printf(0,0,id(arial),"5.0UM=%.1f",id(pm_50_um).state);
        it.printf(0,15,id(arial),"10.0UM=%.1f",id(pm_100_um).state);  
        }

      