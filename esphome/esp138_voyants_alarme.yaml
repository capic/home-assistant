substitutions:
  device_name: esp138-qualite-air
  adress_ip: "192.168.0.138"
  friendly_name: esp138
  time_timezone: "Europe/Paris"
  
esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi
  password: !secret mdpwifi


  manual_ip:
    static_ip: ${adress_ip}
    gateway: 192.168.0.1
    subnet: 255.255.255.0

  reboot_timeout: 5min
  fast_connect: true

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:

ota:

web_server:
  port: 80

i2c:
  sda: GPIO4 #D2=pin 19
  scl: GPIO5 #D1=pin 20
  scan: True
  id: bus_a
uart:
  - id: uart_a
    rx_pin: GPIO2 #D4
    baud_rate: 9600

  - id: uart_b
    rx_pin: GPIO3
    tx_pin: GPIO1
    baud_rate: 9600

sensor:
  - platform: pmsx003
    uart_id: uart_a
    type: PMSX003
    pm_1_0:
      name: "Concentration de particules <1.0µm"
      id: pm1_0
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
            send_first_at: 1

    pm_2_5:
      name: "Concentration de particules <2.5µm"
      id: pm2_5
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
            send_first_at: 1

      on_value:
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  below: 35
              then: 
                - output.turn_on: gpio_14 #Led verte
                - output.turn_off: gpio_13 #Led jaune
                - output.turn_off: gpio_15 #Led rouge
                
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 35.001
                  below: 85
              then: 
                  - output.turn_off: gpio_14 #Led verte
                  - output.turn_on: gpio_13 #Led jaune
                  - output.turn_off: gpio_15 #Led rouge
                    
          - if:
              condition:
                sensor.in_range:
                  id: pm2_5
                  above: 85.001
              then: 
                  - output.turn_off: gpio_14 #Led verte
                  - output.turn_off: gpio_13 #Led jaune
                  - output.turn_on: gpio_15 #Led rouge                    
            
    pm_10_0:
      name: "Concentration de particules <10.0µm"
      id: pm10_0
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
            send_first_at: 1
            
    pm_0_3um:
      name: "Nb de particules >0.3"
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_0_5um:
      name: "Nb de particules >0.5"
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_1_0um:
      name: "Nb de particules >1.0"
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_2_5um:
      name: "Nb de particules >2.5"
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_5_0um:
      name: "Nb de particules >5.0"
      unit_of_measurement: "ppd" 
      accuracy_decimals: 0

    pm_10_0um:
      name: "Nb de particules >10.0"
      unit_of_measurement: "ppd"
      accuracy_decimals: 0

      
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal Sensor"
    update_interval: 60s

  - platform: uptime
    name: "${friendly_name} Uptime Sensor"
    update_interval: 60s
    
  - platform: mhz19
    uart_id: uart_b
    co2:
      name: "MH-Z19 CO2 Value"
      id: co2
      accuracy_decimals: 0
      filters:
        - sliding_window_moving_average:
            window_size: 12 # moyenne sur 12 lecture
            send_every: 6 # envoi toutes les 6 lectures
            send_first_at: 1 # envoi à la premiere lecture
            
    temperature:
      name: "MH-Z19 Temperature"
      id: temp
      filters:
        - sliding_window_moving_average:
            window_size: 24
            send_every: 12
            send_first_at: 1
            
    update_interval: 10s
    automatic_baseline_calibration: false    


# Il s'agit d'un modèle de capteur qui effectue une moyenne mobile de 30 minutes de PM2,5
# il supprime les valeurs aberrantes et de rendre le contrôle plus fluide

  - platform: template
    name: "Concentration de particules <2.5µm median"
    id: pm2_5_median
    icon: mdi:chemical-weapon
    unit_of_measurement: µg/m³
    lambda: |-
      return id(pm2_5).state;
    update_interval: 60s
    filters:
      - median:
          window_size: 30
          send_every: 30
          send_first_at: 15

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO16
      inverted: True
    name: bp_ecl
#    on_press:
#      then:
#        - output.turn_on: gpio_12
#        - delay: 5s
#        - output.turn_off: gpio_12

    on_press:
      then:
        - binary_sensor.template.publish:
            id: backlight
            state: ON
        - binary_sensor.template.publish:
            id: backlight
            state: OFF
  - platform: template
    id: backlight
    filters:
      - delayed_off: 90s
    on_press:
      then:
        - lambda: |-
            id(aff1).backlight();
    on_release:
      then:
        - lambda: |-
            id(aff1).no_backlight();
        
#Etat de la connection
  - platform: status
    name: "${friendly_name} Status"

switch:   
  - platform: gpio
    pin: 
      number: D3 # GPIO00
    id: val_mes
    name: "${friendly_name} Validation mesure"
    
  - platform: restart
    name: "${friendly_name} Restart"
    
interval:
  - interval: 120s
    then:
      - switch.turn_on: val_mes
      - lambda: |-
          id(aff1).backlight();
      - delay: 20s
      - switch.turn_off: val_mes
      - delay: 20s
      - lambda: |-
          id(aff1).no_backlight();    

output:
  - platform: gpio
    pin: GPIO12 #D6 Bleu
    id: gpio_12
    
  - platform: gpio
    pin: GPIO13 #D7 Jaune
    id: gpio_13
  
  - platform: gpio
    pin: GPIO14 #D5 Vert
    id: gpio_14
    
  - platform: gpio
    pin: GPIO15 #D8 rouge
    id: gpio_15
    
# gestion afficheur
display:
  - platform: lcd_pcf8574
    id: aff1
    dimensions: 20x4
    address: 0x27
    lambda: |-
      it.printf(0,0,"PM1.0=%.2f",id(pm1_0).state);
      it.printf(0,1,"PM2.5=%.2f",id(pm2_5).state);
      it.printf(12,1,"M=%.2f",id(pm2_5_median).state);
      it.printf(0,2,"PM10.0=%.2f",id(pm10_0).state);
      it.printf(0,3,"CO2=%.0f",id(co2).state);
      it.printf(12,3,"T=%.2f",id(temp).state);


      