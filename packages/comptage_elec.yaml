utility_meter:
# usage jour  
  energy_total_usage_daily:
    source: sensor.pzem_totale_energy
    cycle: daily
    tariffs:
      - hp
      - hc
  energy_pisc_usage_daily:
    source: sensor.pzem_pisc_energy
    cycle: daily
    tariffs:
      - hp
      - hc
  energy_sdb_usage_daily:
    source: sensor.pzem_sdb_energie
    cycle: daily
    tariffs:
      - hp
      - hc
  energy_pac1_usage_daily:
    source: sensor.energy_pac_p_kw
    cycle: daily
    tariffs:
      - hp
      - hc
  energy_ecs1_usage_daily:
    source: sensor.energy_ecs_p_kw
    cycle: daily
    tariffs:
      - hp
      - hc

  energy_autres_usage_daily:
    source: sensor.energy_autres
    cycle: daily
    tariffs:
      - hp
      - hc
      
# usage semaine
  energy_total_usage_weekly:
    source: sensor.pzem_totale_energy
    cycle: weekly
    tariffs:
      - hp
      - hc
  energy_pisc_usage_weekly:
    source: sensor.pzem_pisc_energy
    cycle: weekly
    tariffs:
      - hp
      - hc
  energy_sdb_usage_weekly:
    source: sensor.pzem_sdb_energie
    cycle: weekly
    tariffs:
      - hp
      - hc
  energy_pac1_usage_weekly:
    source: sensor.energy_pac_p_kw
    cycle: weekly
    tariffs:
      - hp
      - hc
  energy_ecs1_usage_weekly:
    source: sensor.energy_ecs_p_kw
    cycle: weekly
    tariffs:
      - hp
      - hc
  energy_autres_usage_weekly:
    source: sensor.energy_autres
    cycle: weekly
    tariffs:
      - hp
      - hc
# usage mois
  energy_total_usage_monthly:
    source: sensor.pzem_totale_energy
    cycle: monthly
    tariffs:
      - hp
      - hc
  energy_pisc_usage_monthly:
    source: sensor.pzem_pisc_energy
    cycle: monthly
    tariffs:
      - hp
      - hc
  energy_sdb_usage_monthly:
    source: sensor.pzem_sdb_energie
    cycle: monthly
    tariffs:
      - hp
      - hc
  energy_pac1_usage_monthly:
    source: sensor.energy_pac_p_kw
    cycle: monthly
    tariffs:
      - hp
      - hc
  energy_ecs1_usage_monthly:
    source: sensor.energy_ecs_p_kw
    cycle: monthly
    tariffs:
      - hp
      - hc
  energy_autres_usage_monthly:
    source: sensor.energy_autres
    cycle: monthly
    tariffs:
      - hp
      - hc
#usage an
  energy_total_usage_yearly:
    source: sensor.pzem_totale_energy
    cycle: yearly
    tariffs:
      - hp
      - hc
  energy_pisc_usage_yearly:
    source: sensor.pzem_pisc_energy
    cycle: yearly
    tariffs:
      - hp
      - hc
  energy_sdb_usage_yearly:
    source: sensor.pzem_sdb_energie
    cycle: yearly
    tariffs:
      - hp
      - hc
  energy_pac1_usage_yearly:
    source: sensor.energy_pac_p_kw
    cycle: yearly
    tariffs:
      - hp
      - hc
  energy_ecs1_usage_yearly:
    source: sensor.energy_ecs_p_kw
    cycle: yearly
    tariffs:
      - hp
      - hc
  energy_autres_usage_yearly:
    source: sensor.energy_autres
    cycle: yearly
    tariffs:
      - hp
      - hc
# Sert au calcul python
input_number:
# réservé aux essais
  furnace_power:
    name: Furnace Power
    min: 0
    max: 50
    step: 0.1
    mode: box
    unit_of_measurement: 'kW'

  last_power:
    min: 0
    max: 100
    step: 0.1
    mode: box

  energy_power:
    min: 0
    max: 9999
    step: 0.1 

# Réservé ECS calcul python
  energy_ecs_p:
    min: 0
    max: 9999
    step: 0.1 

  last_power_ecs:
    min: 0
    max: 10000
    step: 0.1
    mode: box

# Réservé PAC calcul python
  energy_pac_p:
    min: 0
    max: 9999
    step: 0.1 

  last_power_pac:
    min: 0
    max: 10000
    step: 0.1
    mode: box

template:
  - sensor:
# Consommation ECS calcul python conversion en KWh            
    - name: "energy_ecs_p_kw"
      device_class: "energy"
      state_class: "total"
      unit_of_measurement: "kWh"
      state: >-
        {% set a = states('input_number.energy_ecs_p') | float | round(3) %}
        {{ a / 1000 | round(3) }}

# Consommation PAC calcul python conversion en KWh
    - name: "energy_pac_p_kw"
      device_class: "energy"
      state_class: "total"
      unit_of_measurement: "kWh"
      state: >-        
        {% set a = states('input_number.energy_pac_p') | float | round(3) %}
        {{ a / 1000 | round(3) }}        

# Consommation autres totale en KWh
    - name: "energy_autres"
      state: >-
        {% set a = states('sensor.pzem_totale_energy') | float | round(2) %}
        {% set b = states('sensor.pzem_pisc_energy') | float | round(2) %}
        {% set c = states('sensor.pzem_sdb_energie') | float | round(2) %}
        {% set d = states('sensor.energy_pac_p_kw') | float | round(2) %}          
        {% set e = states('sensor.energy_ecs_p_kw') | float | round(2) %}
        {{ (a-b-c-d-e) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

# Consommation journalière HP + HC - addition des utility meter
    - name: "energy_total_daily"
      state: >-
        {% set p = states('sensor.energy_total_usage_daily_hp') | float | round(2) %}
        {% set o = states('sensor.energy_total_usage_daily_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pisc_daily"
      state: >-
        {% set p = states('sensor.energy_pisc_usage_daily_hp') | float | round(2) %}
        {% set o = states('sensor.energy_pisc_usage_daily_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_sdb_daily"
      state: >-
        {% set p = states('sensor.energy_sdb_usage_daily_hp') | float | round(2) %}
        {% set o = states('sensor.energy_sdb_usage_daily_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pac1_daily"
      state: >-
        {% set p = states('sensor.energy_pac1_usage_daily_hp') | float | round(3) %}
        {% set o = states('sensor.energy_pac1_usage_daily_hc') | float | round(3) %}
        {{ (o + p) | round(3) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_ecs1_daily"
      state: >-
        {% set p = states('sensor.energy_ecs1_usage_daily_hp') | float | round(2) %}
        {% set o = states('sensor.energy_ecs1_usage_daily_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_autres_daily"
      state: >-
        {% set p = states('sensor.energy_autres_usage_daily_hp') | float | round(2) %}
        {% set o = states('sensor.energy_autres_usage_daily_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"

# Consommation semaine HP + HC
    - name: "energy_total_weekly"
      state: >-
        {% set p = states('sensor.energy_total_usage_weekly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_total_usage_weekly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pisc_weekly"
      state: >-
        {% set p = states('sensor.energy_pisc_usage_weekly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_pisc_usage_weekly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_sdb_weekly"
      state: >-
        {% set p = states('sensor.energy_sdb_usage_weekly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_sdb_usage_weekly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pac1_weekly"
      state: >-
        {% set p = states('sensor.energy_pac1_usage_weekly_hp') | float | round(3) %}
        {% set o = states('sensor.energy_pac1_usage_weekly_hc') | float | round(3) %}
        {{ (o + p) | round(3) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_ecs1_weekly"
      state: >-
        {% set p = states('sensor.energy_ecs1_usage_weekly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_ecs1_usage_weekly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total" 

    - name: "energy_autres_weekly"
      state: >-
        {% set p = states('sensor.energy_autres_usage_weekly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_autres_usage_weekly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  


# Consommation mensuelle HP + HC
    - name: "energy_total_monthly"
      state: >-
        {% set p = states('sensor.energy_total_usage_monthly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_total_usage_monthly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pisc_monthly"
      state: >-
        {% set p = states('sensor.energy_pisc_usage_monthly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_pisc_usage_monthly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_sdb_monthly"
      state: >-
        {% set p = states('sensor.energy_sdb_usage_monthly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_sdb_usage_monthly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pac1_monthly"
      state: >-
        {% set p = states('sensor.energy_pac1_usage_monthly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_pac1_usage_monthly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_ecs1_monthly"
      state: >-
        {% set p = states('sensor.energy_ecs1_usage_monthly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_ecs1_usage_monthly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_autres_monthly"
      state: >-
        {% set p = states('sensor.energy_autres_usage_monthly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_autres_usage_monthly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

# Consommation annuelle HP + HC
    - name: "energy_total_yearly"
      state: >-
        {% set p = states('sensor.energy_total_usage_yearly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_total_usage_yearly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pisc_yearly"
      state: >-
        {% set p = states('sensor.energy_pisc_usage_yearly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_pisc_usage_yearly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_sdb_yearly"
      state: >-
        {% set p = states('sensor.energy_sdb_usage_yearly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_sdb_usage_yearly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_pac1_yearly"
      state: >-
        {% set p = states('sensor.energy_pac1_usage_yearly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_pac1_usage_yearly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_ecs1_yearly"
      state: >-
        {% set p = states('sensor.energy_ecs1_usage_yearly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_ecs1_usage_yearly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  

    - name: "energy_autres_yearly"
      state: >-
        {% set p = states('sensor.energy_autres_usage_yearly_hp') | float | round(2) %}
        {% set o = states('sensor.energy_autres_usage_yearly_hc') | float | round(2) %}
        {{ (o + p) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"          

sensor:
# Energie ECS mesurée avec integration 
  - platform: integration
    source: sensor.ecocompteur_ecs
    name: Ecs Energie Integration
    unit_prefix: k
    round: 2