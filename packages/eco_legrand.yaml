
#EcoLegrand
sensor:
  - platform: command_line
    name: "EcoCompteur ECS"  
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data1'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur WC"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data2'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur PAC"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data3'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur Clim"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data4'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur VMC Niv0 brut"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data5'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur Date_Time"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.Date_Time'
    scan_interval: 120
    unit_of_measurement: s

# Consommation - Energies

  - platform: command_line
    name: "Linky tarif Courant"
    command: curl -s 'http://192.168.0.26/data.json' | jq '.tarif_courant'
    scan_interval: 60

# Statistiques puissance 
  - platform: statistics
    name: puissance_vmc_niv0
    entity_id: sensor.ecocompteur_vmc_niv0_brut
    sampling_size: 10
    #max_age:
      # minutes: 30

template:
  sensor:

# Limite les valeurs aberantes de la puissance de la VMC
    - name: "EcoCompteur VMC Niv0"
      unique_id: "ecocompteur_vmc_niv0"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {% set p = state_attr('sensor.puissance_vmc_niv0', 'median') | float(default=0) | round(1) %}
        {% if p>100 %}
          100
        {%- else -%}
          {{ p }}
        {%- endif %}
