
#EcoLegrand
sensor:
  - platform: command_line
    name: "EcoCompteur ECS"  
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data1'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur WC"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data2'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur PAC"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data3'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur Clim"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data4'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur VMC Niv0 brut"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.data5'
    scan_interval: 60
    unit_of_measurement: W

  - platform: command_line
    name: "EcoCompteur Date_Time"
    command: curl -s 'http://192.168.0.26/inst.json' | jq '.Date_Time'
    scan_interval: 120
    unit_of_measurement: s

# Consommation - Energies
  - platform: command_line
    name: "Linky HP Wh"
    command: curl -s 'http://192.168.0.26/data.json' | jq '.conso_hp'
    scan_interval: 60
    unit_of_measurement: Wh
    
  - platform: command_line
    name: "Linky HC Wh"
    command: curl -s 'http://192.168.0.26/data.json' | jq '.conso_hc'
    scan_interval: 60
    unit_of_measurement: Wh

  - platform: command_line
    name: "Linky tarif Courant"
    command: curl -s 'http://192.168.0.26/data.json' | jq '.tarif_courant'
    scan_interval: 60

# Statistiques puissance 
  - platform: statistics
    name: puissance_vmc_niv0
    entity_id: sensor.ecocompteur_vmc_niv0_brut
    sampling_size: 10
    #max_age:
      # minutes: 30

input_number:
# Utilisé pour calculer le time out de la liaison linky
# en vérifiant que la consommation évolue dans une periode horaire
  mem_linky_hphc:
    name: Mem linky HPHC
    min: 0
    max: 100000000000
    unit_of_measurement: Wh
    icon: mdi:timeline-check-outline
    mode: box
    

template:
  sensor:
    - name: "Linky Conso Totale HPHC Wh"
      unique_id: "linky_hphc_wh"
      unit_of_measurement: "Wh"
      device_class: "energy"
      state_class: "total"  
      state: >-
        {% set hp = states('sensor.linky_hp_wh') | float(default=0) | round(0) %}
        {% set hc = states('sensor.linky_hc_wh') | float(default=0) | round(0) %}
        {{ (hp+hc) | round(0) }}

    - name: "Linky Conso HP"
      unique_id: "linky_conso_hp"
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  
      state: >-
        {% set hp = states('sensor.linky_hp_wh') | float(default=0) | round(0) %}
        {{ (hp/1000) | round(0) }}

    - name: "Linky Conso HC"
      unique_id: "linky_conso_hc"
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  
      state: >-
        {% set hp = states('sensor.linky_hc_wh') | float(default=0) | round(0) %}
        {{ (hp/1000) | round(0) }}


    - name: "Linky Conso Totale HPHC"
      unique_id: "linky_conso_totale_hphc"
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"  
      state: >-
        {% set hp = states('sensor.linky_conso_hp') | float(default=0) | round(0) %}
        {% set hc = states('sensor.linky_conso_hc') | float(default=0) | round(0) %}
        {{ (hp+hc) | round(0) }}
        
    - name: "linky_tarif"
      unique_id: "linky_tarif"
      state: >
        {% if is_state("sensor.linky_tarif_courant", "2") -%}
          HP
        {%- else -%}
          HC
        {%- endif %}

# Limite les valeurs aberantes de la puissance de la VMC
    - name: "EcoCompteur VMC Niv0"
      unique_id: "ecocompteur_vmc_niv0"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
#        {% set p = states('sensor.ecocompteur_vmc_niv0_brut') | float(default=0) | round(0) %}      
      state: >-
        {% set p = state_attr('sensor.puissance_vmc_niv0', 'median') | float(default=0) | round(1) %}
        {% if p>100 %}
          100
        {%- else -%}
          {{ p }}
        {%- endif %}
