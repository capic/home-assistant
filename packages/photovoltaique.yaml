####################################################
#                                                  #
#                 PHOTOVOLTAIQUE                   #
#                                                  #
####################################################
input_boolean:

  valid_delestage:
    name: validation Delestage PV
    icon: mdi:power-settings

  mem_delestage:
    name: memoire Delestage PV
    icon: mdi:power-settings

input_number:
  # Seuil Délestage
  seuil_delestage_pv:
    name: Seuil Délestage PV
    min: 0
    max: 1800
    unit_of_measurement: W
    icon: mdi:flash
    mode: box


template:
  - sensor:
# Envoy: Puissance injectée sur le réseau - Integration dans "Entrées"
# L'intégration en kWh et le cumul journalier sont effectués dans "parametres/entrée"
    - name: "Envoy Puissance Injectée Réseau"
      unique_id: "envoy_puissance_injectee_reseau"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {{ [0, (states('sensor.envoy_122103023124_current_power_production') | int - states('sensor.envoy_122103023124_current_power_consumption') | int)] | max }}

# Envoy: Puissance soutirée sur le réseau
# L'intégration en kWh et le cumul journalier sont effectués dans "parametres/entrée"
    - name: "Envoy Puissance soutirée Réseau"
      unique_id: "envoy_puissance_soutiree_reseau"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {{ [0, (states('sensor.envoy_122103023124_current_power_consumption') | int - states('sensor.envoy_122103023124_current_power_production') | int)] | max }}

# Envoy Ecart absolu entre la production et la consommation
    - name: "Envoy pv conso net"
      unique_id: "envoy_pv_conso_net"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {% set solar = states('sensor.envoy_122103023124_current_power_consumption') | int %}
        {% set house = states('sensor.envoy_122103023124_current_power_production') | int %}
        {% if house > solar %}
          {{ solar }}
        {% else %}
          {{ house }}
        {%endif%} 

# Envoy Ecart relatif entre la production et la consommation
    - name: "Envoy pv conso-prod"
      unique_id: "envoy_pv_conso_prod"
      device_class: "power"
      state_class: "measurement"
      unit_of_measurement: "W"
      state: >-
        {% set solar = states('sensor.envoy_122103023124_current_power_consumption') | int %}
        {% set house = states('sensor.envoy_122103023124_current_power_production') | int %}
        {{ solar-house }}
        
# Calcul de la puissance importée ou exportée
    - name: "Envoy energie import export"
      unique_id: "envoy_energie_import_export"
      state: >-
        {% if (states('sensor.envoy_122103023124_current_power_production') | int - states('sensor.envoy_122103023124_current_power_consumption') | int) > 0 %}Export{% else %}Import{% endif %}
      icon: "{% if (states('sensor.envoy_122103023124_current_power_production') | int - states('sensor.envoy_122103023124_current_power_consumption') | int) > 0 %}mdi:arrow-up-box{% else %}mdi:arrow-down-box{% endif %}"
      device_class: "power"
      state_class: "measurement"

# Calcul de la consommation maison = production PV + la puissance importée - la puissance exportée
    - name: "Envoy total conso maison"
      unique_id: "envoy_total_conso_maison"
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total" 
      state: >-
        {% set import = states('sensor.envoy_energie_soutiree_reseau_jour') | int(default=0) %}
        {% set export = states('sensor.envoy_energie_injectee_reseau_jour') | int(default=0) %}
        {% set dech_bat = states('sensor.mp2_energy_decharge_batteries_jour') | int(default=0) %}
        {% set prod = states('sensor.envoy_energie_totale_produite_jour') | int(default=0) %}
        {{ prod + import + dech_bat - export }}

# Envoy: Convertion en kWh de la consommation energie jour
    - name: "Envoy Energie Totale Consommée Jour"
      unique_id: "envoy_energie_totale_conso_jour"
      state: >-
        {% set p = states('sensor.envoy_122103023124_today_s_energy_consumption') | float(default=0) | round(2) %}
        {{ (p / 1000) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total"      

# Envoy: Convertion en kWh de la production energie jour
    - name: "Envoy Energie Totale Produite Jour"
      unique_id: "envoy_energie_totale_prod_jour"
      state: >-
        {% set p = states('sensor.envoy_122103023124_today_s_energy_production') | float(default=0) | round(2) %}
        {{ (p / 1000) | round(2) }}
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: "total" 
      
# Envoy Rendement panneaux
# Doit tendre idéalement vers le 100%
    - name: "Envoy Rendement PV"
      unique_id: "envoy_rendement_pv"
      unit_of_measurement: "%"
      state: >-
        {% set p = states('sensor.envoy_122103023124_current_power_production') | float(default=0) | round(2) %}
        {{ ((p / 4490)*100) | round(0) }}
      state_class: "measurement"

# Dépendence energetique
    - name: "Envoy Dépendance Energetique"
      unique_id: "envoy_dependance_energetique"
      unit_of_measurement: "%"
      state: >-
        {% set import = states('sensor.envoy_energie_soutiree_reseau_jour') | float(default=0) | round(2) %}
        {% set conso = states('sensor.envoy_energie_totale_consommee_jour') | float(default=0) | round(2) %}
        {{ ((1-(import/conso))*100) | round(0) }}
      state_class: "measurement"