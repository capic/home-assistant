input_number:
  # utilisé pour simuler la température de l'eau pendant les test
  temp_piscine:
    name: Temp Eau Simul
    min: -2
    max: 35
    unit_of_measurement: °C
    icon: mdi:thermometer

# temperature de l'eau avant arret ppe
  mem_temp_piscine:
    name: Temp Eau avant arret
    min: -2
    max: 35
    unit_of_measurement: °C
    step: 0.1
    icon: mdi:thermometer
    mode: box

# temperature de l'eau avant arret ppe
  temps_cartouche_chlore:
    name: Temps cartouche Chlore
    min: 0
    max: 3600
    unit_of_measurement: h
    step: 0.1
    icon: mdi:clock
    mode: box

# Seuil inferieur temperature Hors gel
  hors_gel_inf:
    name: Temp Inf Hors-Gel
    min: -5
    max: 1
    unit_of_measurement: °C
    icon: mdi:thermometer
# Seuil superieur temperature Hors gel
  hors_gel_sup:
    name: Temp Sup Hors-Gel
    min: -2
    max: 5
    unit_of_measurement: °C
    icon: mdi:thermometer

input_datetime:
  heure_ouv_volet_pisc:
    name: Heure Ouv Volet Auto
    has_date: false
    has_time: true

  heure_ferm_volet_pisc:
    name: Heure Ferm Volet Auto
    has_date: false
    has_time: true

  heure_ma_pump_pisc_hiv:
    name: Heure Ma Pompe Pisc Hiv
    has_date: false
    has_time: true

  heure_at_pump_pisc_hiv:
    name: Heure At Pompe Pisc Hiv
    has_date: false
    has_time: true

input_boolean:
  # inutilisée????????? à verifier
  pool_water_level_critical:
    name: Niveau eau critique
    initial: false

  # EV appoint Piscine en mode automatique
  ev_eau_piscine:
    name: Ev Piscine
    icon: mdi:water
  
  # Volet Piscine en mode automatique
  volet_piscine_auto:
    name: Volet Piscine (Auto=1)
    icon: mdi:garage

  #cde eclairage piscine
  eclairage_piscine:
    name: Eclairage piscine
    icon: mdi:car-light-high

  # Calcul du hors gel- Mémoire de mise en hors gel
  hors_gel:
    name: Gel piscine (si=1)
    icon: mdi:snowflake-alert
    initial: false

# selection du mode de fonctionnement de la filtration
input_select:
  pool_pump_mode:
    name: Pool Pump mode
    options:
      - "Auto"
      - "On"
      - "Off"
      - "Hivernage"
    icon: mdi:pool

sensor:
  # Affichage du temps de fonctionnement de la pompe ce jour
  - platform: history_stats
    name: Pool Pump running today
    entity_id: binary_sensor.pool_pump_running
    state: "on"
    type: time
    start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
    end: "{{ now() }}"

  # Affichage du temps de fonctionnement de l'électrovanne appoint d'eau ce jour
  - platform: history_stats
    name: Ev Eau tps ouverture jour
    entity_id: switch.cde_ev_eau
    state: "on"
    type: time
    start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
    end: "{{ now() }}"
    
  # Affichage du temps de fonctionnement de l'électrovanne appoint d'eau sur 7 jours
  - platform: history_stats
    name: Ev eau sur 7j
    entity_id: switch.cde_ev_eau
    state: 'on'
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      days: 7
    
template:
# mesure de la température de l'eau, permet de basculer facilement en mode simulation
# en commentant ou decommentant les lignes ci-dessous
  sensor:
    - name: "pool_water_temperature"
      state: "{{ states('input_number.mem_temp_piscine')|float(default=0)|round(1) }}" # memoire temperature de l'eau avant arret pompe
        #e_template: "{{ states('input_number.temp_piscine_ph')|float|round(1) }}" # Simulation avec input_numbe
      icon: mdi:oil-temperature
      unit_of_measurement: "ºC"

        # calcul de l'heure pivot, c'est l'heure autour de laquelle le temps de fonctionnement est réparti
    - name: "heure_pivot_piscine"
      state: '{{ as_timestamp(strptime(state_attr("sun.sun", "next_noon"), "")) | timestamp_custom("%H:%M") }}'
      icon: mdi:weather-sunny


  # Recopie pression filtre lu dans esphome dans un template
    - name: "pression_piscine_p"
      state: '{{ states("sensor.pression_filtre") |float(default=0) | round(2) }}'
      unit_of_measurement: "Bars"

  binary_sensor:
    # Si la puissance electrique est superieure à 500w, on considere que la pompe est en fonctionnement
    - name: "pool_pump_running"
      state: >-
        {{states.sensor.pzem_pisc_puissance.state | float(default=0) > 500}}

  # Calcul en fonction de la position du soleil
  # Sun Azimtuh est calculé dans Meteo
    - name: "soleil_volet_piscine"
      state: >-
        {% set a=states('sensor.sun_azimuth_2')|float(default=0) %}
        {{ (a>97) and (a<290) }}

# Commande du volet roulant via un Cover
cover:
  - platform: template
    covers:
      volet_piscine:
        device_class: garage
        value_template: "{{is_state('binary_sensor.volet_piscine_ferme', 'off')}}"
        open_cover:
          service: script.volet_piscine_ouverture
        close_cover:
          service: script.volet_piscine_fermeture
        icon_template: >-
          {% if is_state('binary_sensor.volet_piscine_ferme', 'on') %}
            mdi:garage
          {% else %} 
            {% if is_state('binary_sensor.volet_piscine_ferme', 'off') %}
            mdi:garage-open
          {% else %}
            mdi:garage-alert
          {% endif %}
          {% endif %}

