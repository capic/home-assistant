####################################################
#                                                  #
#                     SYSTEME                      #
#                                                  #
####################################################

sensor:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /config
      - type: disk_use
      - type: disk_free
      - type: memory_use_percent
      - type: memory_free
      - type: processor_use
      - type: memory_use
      - type: swap_use
      - type: swap_use_percent
      - type: swap_free
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: last_boot
      - type: network_in
        arg: hassio
      - type: network_out
        arg: enp3s0

  - platform: command_line
    name: processor_temperature_z0
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
    
  - platform: command_line
    name: processor_temperature_z1
    command: "cat /sys/class/thermal/thermal_zone1/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'

  - platform: uptime
    name: Uptime
    scan_interval: 60

  - platform: template
    sensors:
      ha_uptime:
        friendly_name: 'Uptime'
        icon_template: mdi:home-assistant
        value_template: >-
          {%- set up = now().timestamp()-as_timestamp(states('sensor.uptime')) %}

          {%- macro phrase(name,divisor,mod=None) %}
            {%- set value = ((up//divisor) % (mod if mod else divisor))|int %}
            {{- '{} {}{}'.format(value,name,end) if value|int > 0 else ''}}
          {%- endmacro %}

          {%- set values = [phrase('w',60*60*24*7),
                            phrase('j',60*60*24,7),
                            phrase('h',60*60,24),
                            phrase('m',60),
                            phrase('s',1,60)]
                            |select('!=','')|list %}
          {{values[:-1]|join(', ') ~ ' et ' ~ values[-1] if values|length > 1 else
            values|first}}

      espresence_distance_oneplus5t:
        unit_of_measurement: "ml"
        value_template: >-
          {{state_attr('sensor.espresense_presence_oneplus','distance') }}


# One entry for each beacon you want to track
  - platform: mqtt_room
    device_id: sd:0xfd64
    name: 'ESPresense Presence Oneplus'
    state_topic: espresense/rooms
    timeout: 60
    away_timeout: 120

binary_sensor:
# One entry per sensor node
  - platform: mqtt
    name: Salon Mqtt Room
    state_topic: espresense/rooms/salon/status
    json_attributes_topic: espresense/rooms/salon/telemetry
    payload_on: online
    payload_off: offline
    device_class: connectivity

