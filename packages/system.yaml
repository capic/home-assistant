####################################################
#                                                  #
#                     SYSTEME                      #
#                                                  #
####################################################
input_boolean:
  # Validation notification alerte météo 
  alim_tablette_ok:
    name: Alim Tablette OK=On

sensor:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /config
      - type: disk_use
      - type: disk_free
      - type: memory_use_percent
      - type: memory_free
      - type: processor_use
      - type: memory_use
      - type: swap_use
      - type: swap_use_percent
      - type: swap_free
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: last_boot
      - type: network_in
        arg: hassio
      - type: network_out
        arg: enp3s0

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'

  - platform: command_line
    name: processor_temperature_z0
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
    
  - platform: command_line
    name: processor_temperature_z1
    command: "cat /sys/class/thermal/thermal_zone1/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'

# One entry for each beacon you want to track
  - platform: mqtt_room
    device_id: sd:0xfd64
    name: 'ESPresense Presence Oneplus'
    state_topic: espresense/rooms
    timeout: 60
    away_timeout: 120

mqtt:
  sensor: 
    # Tablette
    - name: "Tablette niveau charge"
      unique_id: "tablette_niveau_charge"
      state_topic: "wallpanel/mywallpanel/sensor/battery"
      unit_of_measurement: "%"
      device_class: "battery"
      value_template: "{{ value_json.value | round(2) }}"

  binary_sensor:
# One entry per sensor node
    - name: Salon Mqtt Room
      state_topic: espresense/rooms/salon/status
      json_attributes_topic: espresense/rooms/salon/telemetry
      payload_on: online
      payload_off: offline
      device_class: connectivity

      # Tablette
    - name: "Tablette_etat_usb"
      unique_id: "tablette_etat_usb"
      state_topic: "wallpanel/mywallpanel/sensor/battery"
      payload_on: 'True'
      payload_off: 'False'
      value_template: "{{ value_json.charging }}"
      device_class: "battery_charging"

    - name: "Tablette_etat_charge"
      unique_id: "tablette_etat_charge"
      state_topic: "wallpanel/mywallpanel/sensor/battery"
      payload_on: 'True'
      payload_off: 'False'
      value_template: "{{ value_json.acPlugged }}"
      device_class: "battery_charging"

    - name: "Tablette etat connection"
      unique_id: "tablette_etat_connection"
      state_topic: wallpanel/mywallpanel/connection
      payload_on: online
      payload_off: offline
      device_class: connectivity




switch:
# Commande de reboot du RPI Weex
  - platform: wake_on_lan
    name: RebootWeeks
    host: 192.168.0.62
    mac: B8:27:EB:27:F8:6F
    turn_off:
      service: shell_command.turn_off_remote_pc


